@{
    ViewData["Title"] = "Browse Page";
}
@using System.IO
@using VersOne.Epub;

<style>
    body {
        font-family: Arial, Helvetica, sans-serif;
        background-image: url('https://images5.alphacoders.com/919/919004.jpg');
        background-attachment: fixed;
        background-size: cover;
    }

    section {
        display: -webkit-flex;
        display: flex;
        padding: 30px;
        background: rgba(255, 255, 255, 0.8)
    }

    img {
        max-width: 300px;
        max-height: 300px;
        width: auto;
        height: auto;
        padding: 10px;
    }

    footer {
        background-color: #fff;
        text-align: center;
        color: white;
    }

    row {
        display: block;
    }

    #divider.show {
        display: block;
    }

    #divider {
        position: absolute;
        width: 1px;
        border-right: 1px #000 solid;
        height: 84%;
        z-index: 1;
        left: 50%;
        margin-left: -1px;
        top: 7.6%;
        opacity: .15;
        box-shadow: -2px 0 15px rgb(0 0 0);
        display: none;
    }

    a {
        text-decoration: none;
        display: inline-block;
        padding: 8px 16px;
    }

        a:hover {
            background-color: #ddd;
            color: black;
        }

    .previous {
        background-color: #f1f1f1;
        color: black;
    }

    .next {
        background-color: #f1f1f1;
        color: black;
    }

    .round {
        border-radius: 50%;
    }
</style>

<body style="height:100%">

    <div id="divider" class="show"></div>
    <div id="area" style="z-index: 10; background:white; margin-top: 50px; width: 70rem; height: 40rem;">
        <div class="container centered" style="z-index: 100; padding: 0px;">
            <a id="prev" href="#prev" class="arrow float-start" style="visibility: hidden; background-color: rgba(128, 128, 128, 0); margin-left: 10px; font-size: 300%; ">‹</a>
            <a id="next" href="#next" class="arrow float-right" style="visibility: visible; background-color: rgba(128, 128, 128, 0); font-size: 300%;">›</a>
        </div>
    </div>

    <script>

        var params = URLSearchParams && new URLSearchParams(document.location.search.substring(1));
        var url = params && params.get("url") && decodeURIComponent(params.get("url"));
        var currentSectionIndex = (params && params.get("loc")) ? params.get("loc") : undefined;

        var link = '@ViewBag.url';
        var book = ePub(link);
        var rendition = book.renderTo("area", {
          width: "70rem",
          height: "40rem",
          spread: "always"
        });

        rendition.display(currentSectionIndex);

        book.ready.then(() => {

          var next = document.getElementById("next");

          next.addEventListener("click", function(e){
            book.package.metadata.direction === "rtl" ? rendition.prev() : rendition.next();
            e.preventDefault();
          }, false);

          var prev = document.getElementById("prev");
          prev.addEventListener("click", function(e){
            book.package.metadata.direction === "rtl" ? rendition.next() : rendition.prev();
            e.preventDefault();
          }, false);

          var keyListener = function(e){

            // Left Key
            if ((e.keyCode || e.which) == 37) {
              book.package.metadata.direction === "rtl" ? rendition.next() : rendition.prev();
            }

            // Right Key
            if ((e.keyCode || e.which) == 39) {
              book.package.metadata.direction === "rtl" ? rendition.prev() : rendition.next();
            }

          };

          rendition.on("keyup", keyListener);
          document.addEventListener("keyup", keyListener, false);

        })

        var title = document.getElementById("title");

        rendition.on("rendered", function(section){
          var current = book.navigation && book.navigation.get(section.href);

        });

        rendition.on("relocated", function(location){
          console.log(location);

          var next = book.package.metadata.direction === "rtl" ?  document.getElementById("prev") : document.getElementById("next");
          var prev = book.package.metadata.direction === "rtl" ?  document.getElementById("next") : document.getElementById("prev");

          if (location.atEnd) {
            next.style.visibility = "hidden";
          } else {
            next.style.visibility = "visible";
          }

          if (location.atStart) {
            prev.style.visibility = "hidden";
          } else {
            prev.style.visibility = "visible";
          }

        });

        rendition.on("layout", function(layout) {
          let viewer = document.getElementById("area");

          if (layout.spread) {
            viewer.classList.remove('single');
          } else {
            viewer.classList.add('single');
          }
        });

        window.addEventListener("unload", function () {
          console.log("unloading");
          this.book.destroy();
        });

        book.loaded.navigation.then(function(toc){

                toc.forEach(function(chapter) {
                    var option = document.createElement("option");
                    option.textContent = chapter.label;
                    option.setAttribute("ref", chapter.href);
                });

            });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var footer = document.getElementsByTagName("footer");
            footer[0].style.display = "none";
        })
    </script>
</body>