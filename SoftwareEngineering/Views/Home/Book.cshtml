@{
    ViewData["Title"] = "Browse Page";
}
@using System.IO
@using VersOne.Epub;

<style>
    body {
        font-family: Arial, Helvetica, sans-serif;
        background-image: url('https://images5.alphacoders.com/919/919004.jpg');
        background-attachment: fixed;
        background-size: cover;
    }

    section {
        display: -webkit-flex;
        display: flex;
        padding: 30px;
        background: rgba(255, 255, 255, 0.8)
    }

    img {
        max-width: 300px;
        max-height: 300px;
        width: auto;
        height: auto;
        padding: 10px;
    }

    footer {
        background-color: #fff;
        text-align: center;
        color: white;
    }

    row {
        display: block;
    }
</style>

<body>
        <div id="area" style="background:white;margin-top:50px;"></div>
        <a id="prev" href="#prev" class="arrow" style="visibility: hidden;">‹</a>
        <a id="next" href="#next" class="arrow" style="visibility: visible;">›</a>
@*        <div class="row">
            @Html.Raw(Model.Html.ElementAt(0).Value.Content);
            
        </div>*@
    <script>

    var params = URLSearchParams && new URLSearchParams(document.location.search.substring(1));
    var url = params && params.get("url") && decodeURIComponent(params.get("url"));
    var currentSectionIndex = (params && params.get("loc")) ? params.get("loc") : undefined;

    // Load the opf
    var book = ePub(url || "https://sebooks.blob.core.windows.net/ebooks/george-rr-martin-buz-ve-atesin-sarkisi.epub");
    var rendition = book.renderTo("area", {
      width: 800,
      height: 600,
      spread: "always"
    });

    rendition.display(currentSectionIndex);

    book.ready.then(() => {

      var next = document.getElementById("next");

      next.addEventListener("click", function(e){
        book.package.metadata.direction === "rtl" ? rendition.prev() : rendition.next();
        e.preventDefault();
      }, false);

      var prev = document.getElementById("prev");
      prev.addEventListener("click", function(e){
        book.package.metadata.direction === "rtl" ? rendition.next() : rendition.prev();
        e.preventDefault();
      }, false);

      var keyListener = function(e){

        // Left Key
        if ((e.keyCode || e.which) == 37) {
          book.package.metadata.direction === "rtl" ? rendition.next() : rendition.prev();
        }

        // Right Key
        if ((e.keyCode || e.which) == 39) {
          book.package.metadata.direction === "rtl" ? rendition.prev() : rendition.next();
        }

      };

      rendition.on("keyup", keyListener);
      document.addEventListener("keyup", keyListener, false);

    })

    var title = document.getElementById("title");

    rendition.on("rendered", function(section){
      var current = book.navigation && book.navigation.get(section.href);

      //if (current) {
      //  var $select = document.getElementById("toc");
      //  var $selected = $select.querySelector("option[selected]");
      //  if ($selected) {
      //    $selected.removeAttribute("selected");
      //  }

      //  var $options = $select.querySelectorAll("option");
      //  for (var i = 0; i < $options.length; ++i) {
      //    let selected = $options[i].getAttribute("ref") === current.href;
      //    if (selected) {
      //      $options[i].setAttribute("selected", "");
      //    }
      //  }
      //}

    });

    rendition.on("relocated", function(location){
      console.log(location);

      var next = book.package.metadata.direction === "rtl" ?  document.getElementById("prev") : document.getElementById("next");
      var prev = book.package.metadata.direction === "rtl" ?  document.getElementById("next") : document.getElementById("prev");

      if (location.atEnd) {
        next.style.visibility = "hidden";
      } else {
        next.style.visibility = "visible";
      }

      if (location.atStart) {
        prev.style.visibility = "hidden";
      } else {
        prev.style.visibility = "visible";
      }

    });

    rendition.on("layout", function(layout) {
      let viewer = document.getElementById("area");

      if (layout.spread) {
        viewer.classList.remove('single');
      } else {
        viewer.classList.add('single');
      }
    });

    window.addEventListener("unload", function () {
      console.log("unloading");
      this.book.destroy();
    });

    book.loaded.navigation.then(function(toc){

			toc.forEach(function(chapter) {
				var option = document.createElement("option");
				option.textContent = chapter.label;
				option.setAttribute("ref", chapter.href);
			});

		});

  
    </script>
</body>